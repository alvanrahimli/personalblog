<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Alvan's Blog</title><link>/</link><description>Recent content on Alvan's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 13 Nov 2021 23:10:03 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>üöÄ Status Update | 14 Nov 2021</title><link>/posts/2021/status-update-1/</link><pubDate>Sat, 13 Nov 2021 23:10:03 +0000</pubDate><guid>/posts/2021/status-update-1/</guid><description>‚ö†Ô∏è DISCLAIMER As this is the first one in series, It will be a bit verbose, because I have to do introduction for all ongoing projects. Thanks.
üí° Introduction Hi, fellow reader!
So, recently I was consooming a bit more articles, from other programmers and designers, and suddenly I thought why I&amp;rsquo;m not writing my own thoughts? Basically, this is good idea, for example you get a chance to look back and remember things you have done.</description><content>&lt;h1 id="-disclaimer">‚ö†Ô∏è DISCLAIMER&lt;/h1>
&lt;p>As this is the first one in series, It will be a bit verbose, because I have to do introduction for all ongoing projects. Thanks.&lt;/p>
&lt;h1 id="-introduction">üí° Introduction&lt;/h1>
&lt;p>Hi, fellow reader!&lt;br>
So, recently I was consooming a bit more articles, from other programmers and designers, and suddenly I thought why I&amp;rsquo;m not writing my own thoughts? Basically, this is good idea, for example you get a chance to look back and remember things you have done. But I was a bit uhmm, how to say, kinda shy. Suddenly, my friend at &lt;a href="https://themisir.com">themisir.com&lt;/a> also said this is a good idea. So, this is me, Alvan, doing it :D&lt;/p>
&lt;h1 id="-what-is-on-my-mind">üí≠ What is on my mind?&lt;/h1>
&lt;p>Recently my life got a massive DLC and some very interesting things in it. Let&amp;rsquo;s break that into the pieces.&lt;br>
Basically, these are what I am (will be) working with on:&lt;/p>
&lt;ul>
&lt;li>New remote full-time job&lt;/li>
&lt;li>Education oriented startup (w/brother)&lt;/li>
&lt;li>IoT oriented startup, where I am IT guy in team&lt;/li>
&lt;li>Idea that I&amp;rsquo;m working on&lt;/li>
&lt;li>University exams&lt;/li>
&lt;li>Whole curiosity of learning new cool stuff&lt;/li>
&lt;/ul>
&lt;p>As you can see, I have to be so stuck and busy all the time, but I&amp;rsquo;m not LOL. Just today, I have watched 2 animated movies: Wreck it Ralph 2 &amp;amp; Sing (has veery nice musics in it).&lt;/p>
&lt;h2 id="full-time-job">Full-time job&lt;/h2>
&lt;p>That full-time job, is such a pain in a**. No, I&amp;rsquo;m not afraid of tasks or smth. It is a bit complicated :(&lt;/p>
&lt;h2 id="education-oriented-startup">Education oriented startup&lt;/h2>
&lt;p>Then we have the first startup. It is a mobile app, built for schools and teacher-student relationships. And actually, it&amp;rsquo;s UI Design is almost complete and I&amp;rsquo;m looking for a mobile developer. You know, in my country, it is not that easy to find one. They are all just coders, coding some e-commerce app over-and-over again. You know, they would do the job, but they need money, and guess what, I don&amp;rsquo;t have that much yet.&lt;br>
Whatever, I&amp;rsquo;m planning of learning flutter myself, but it will take hell a lot of time. Bc I have whole back-end infrastructure on me also Management dashboard, Mobile app, blah blah blah. OK well, we&amp;rsquo;ll see :)&lt;/p>
&lt;h2 id="iot-oriented-startup">IoT oriented startup&lt;/h2>
&lt;p>Ok, that another one, excites my more that others. Unfortunately I can&amp;rsquo;t tell you the details, but that is kinda IoT project of mine. Also the first one.&lt;br>
There are projects which needs a lot of regulation.&lt;/p>
&lt;h2 id="idea-that-im-working-on">Idea that I&amp;rsquo;m working on&lt;/h2>
&lt;p>Oh, this project is a bit interesting and requires attention. It will solve a problem for companies and I&amp;rsquo;m thinking of selling this as an API. But still, this is on very early stage but I have a plan, that hopefully I&amp;rsquo;ll follow. Will be writing more on this as project continues.&lt;/p>
&lt;h2 id="learning-new-things">Learning new things&lt;/h2>
&lt;p>For now, I want to learn more about Go.&lt;/p>
&lt;h1 id="-what-i-actually-did-this-week">üë∑ What I actually did this week?&lt;/h1>
&lt;p>So, interesting question this is. Let&amp;rsquo;s look at the GitHub activity heatmap:&lt;/p>
&lt;p>&lt;img src="/images/status-update-1/github-activity-14-11-2021.png" alt="GitHub Activity" title="Github Activity">
&lt;br>
As you can see, last week was a bit non-coding week. Am I happy? Absolutely no! Do I feel guilty? Indeed, yes! Then why the f* I&amp;rsquo;m not doing any work? Well, this is all because of that full-time job. I&amp;rsquo;m drowning in large codebase with no onboarding or whatsoever. I try to understand and use it, but it is slow. Okay, whatever, I&amp;rsquo;ll handle all of these.&lt;/p>
&lt;p>Guess what is interesting! UI Design of our startup! I damn like that. This is exactly what makes me excited to work. And I&amp;rsquo;m looking forward to write posts about that project&amp;rsquo;s development.&lt;/p>
&lt;p>Okay, these was excuses of my laziness. I couldn&amp;rsquo;t find exact things that I did this week. But next week won&amp;rsquo;t be like this, I hope :D&lt;/p>
&lt;h1 id="-what-im-going-to-do-next-week">üéØ What I&amp;rsquo;m going to do next week?&lt;/h1>
&lt;ul>
&lt;li>Do enough research and a bit coding to make first working example of that &lt;a href="#idea-that-im-working-on">idea&lt;/a>&lt;/li>
&lt;li>Decide who will work on mobile version of our &lt;a href="#a-startup-project">startup&lt;/a>&lt;/li>
&lt;li>Write actual code for this &lt;a href="#a-startup-project">startup&lt;/a>&lt;/li>
&lt;li>Wait for other elements to continue working on this &lt;a href="#another-startup">project&lt;/a>&lt;/li>
&lt;li>Watch some Disney movies (Idk what are these called. Pixar movies? just movies? Whatever.)&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="/images/status-update-1/handshake-gym-programmer.jpg#center" alt="Handshake Meme">&lt;/p>
&lt;h1 id="-bonus-links">üéÅ Bonus links&lt;/h1>
&lt;ul>
&lt;li>üé∂ &lt;a href="https://youtu.be/ZILsHowUjpQ">Amazing music to listen&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="thanks-very-much-for-bearing-with-me-until-here-3">&lt;strong>Thanks very much for bearing with me until here &amp;lt;3&lt;/strong>&lt;/h1></content></item><item><title>OS-Dev Notes #1</title><link>/posts/os-dev-notes-1/</link><pubDate>Fri, 01 Oct 2021 14:19:49 +0000</pubDate><guid>/posts/os-dev-notes-1/</guid><description>OS-DEV notes #1 8086 Segment Registers: To access memory adresses more than 16 bit (65535) we use &amp;lsquo;Segment Registers&amp;rsquo;
It is always appreciated to remove interrupts (cli), reset segment registers, then set interrupts (sli) before bootloader starts.
CS =&amp;gt; Code Segment SS =&amp;gt; Stack Segment DS =&amp;gt; Data Segment ES =&amp;gt; Extra Segment Final memory address is calculated as:
final address = Segment Register * 16 + offset</description><content>&lt;h1 id="os-dev-notes-1">OS-DEV notes #1&lt;/h1>
&lt;h2 id="8086-segment-registers">8086 Segment Registers:&lt;/h2>
&lt;p>To access memory adresses more than 16 bit (65535) we use &amp;lsquo;Segment Registers&amp;rsquo;&lt;br>
It is always appreciated to remove interrupts (&lt;code>cli&lt;/code>), reset segment registers, then set interrupts (&lt;code>sli&lt;/code>) before bootloader starts.&lt;/p>
&lt;ul>
&lt;li>CS =&amp;gt; Code Segment&lt;/li>
&lt;li>SS =&amp;gt; Stack Segment&lt;/li>
&lt;li>DS =&amp;gt; Data Segment&lt;/li>
&lt;li>ES =&amp;gt; Extra Segment&lt;/li>
&lt;/ul>
&lt;p>Final memory address is calculated as:&lt;br>
&lt;code>final address = Segment Register * 16 + offset&lt;/code>&lt;/p>
&lt;p>In the example below, &lt;code>lodsb&lt;/code> knows that, address it must read is &lt;code>0x7c * 16 + 0x1f&lt;/code>, as &lt;code>lodsb&lt;/code> uses Data Segment&lt;/p>
&lt;pre tabindex="0">&lt;code>org 0
mov ax, 0x7c
mov ds, ax
mov si, 0x1f
lodsb ; LODSB uses Data Segment for segmentation
&lt;/code>&lt;/pre>&lt;p>The table below demonstrates LOD__ command usage:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Code&lt;/th>
&lt;th>Mnemonic&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AC&lt;/td>
&lt;td>LODS m8&lt;/td>
&lt;td>Load byte at address DS:(E)SI into AL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AD&lt;/td>
&lt;td>LODS m16&lt;/td>
&lt;td>Load word at address DS:(E)SI into AX&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AD&lt;/td>
&lt;td>LODS m32&lt;/td>
&lt;td>Load double-word at address DS:(E)SI into EAX&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AC&lt;/td>
&lt;td>LODSB&lt;/td>
&lt;td>Load byte at address DS:(E)SI into AL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AD&lt;/td>
&lt;td>LODSW&lt;/td>
&lt;td>Load word at address DS:(E)SI into AX&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AD&lt;/td>
&lt;td>LODSD&lt;/td>
&lt;td>Load double-word at address DS:(E)SI into EAX&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Stack Segmentation example:&lt;br>
At the code below, when we &lt;strong>push 0xffff&lt;/strong> to stack, stack pointer is
decremented by 2 (bc, we use 16 bit) and &lt;code>sp == 0x7bfe&lt;/code>.&lt;br>
Then, memory at adress &lt;strong>0x7bfe&lt;/strong> is set to &lt;strong>0xffff&lt;/strong>.&lt;/p>
&lt;pre tabindex="0">&lt;code>mov ax, 0x00 ; Set ax to 0x00
mov ss, ax ; Move value in ax to 'stack segment'
mov ax, 0x7c00 ; Add ax to 0x7c00
mov sp, ax ; Move AX to 'stack pointer'
push 0xffff ; Pushes 0xffff to the stack
&lt;/code>&lt;/pre></content></item><item><title>Non-Functional Requirements</title><link>/posts/non-functional-requirements/</link><pubDate>Fri, 03 Sep 2021 14:19:49 +0000</pubDate><guid>/posts/non-functional-requirements/</guid><description>Non-functional requirements are, but not limited to:
Performance Load Data volume Concurrent users SLA &amp;amp; etc. Performance System must be fast. But fast is relative term. If there is an end user fast means requests taking less than 1 sec. On the other side if we are working B2B, fast can mean less than 100ms.
Latency How much time does it take to perform a single task?
Throughput How many tasks can be performed in a given time unit?</description><content>&lt;p>Non-functional requirements are, but not limited to:&lt;/p>
&lt;ul>
&lt;li>Performance&lt;/li>
&lt;li>Load&lt;/li>
&lt;li>Data volume&lt;/li>
&lt;li>Concurrent users&lt;/li>
&lt;li>SLA &amp;amp; etc.&lt;/li>
&lt;/ul>
&lt;h2 id="performance">Performance&lt;/h2>
&lt;p>System must be fast. But fast is relative term. If there is an end user fast means requests taking less than 1 sec. On the other side if we are working B2B, fast can mean less than 100ms.&lt;/p>
&lt;h3 id="latency">Latency&lt;/h3>
&lt;p>How much time does it take to perform a single task?&lt;/p>
&lt;h3 id="throughput">Throughput&lt;/h3>
&lt;p>How many tasks can be performed in a given time unit?&lt;/p>
&lt;h3 id="latency-vs-throughput">Latency VS Throughput&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Type&lt;/th>
&lt;th>Duration&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Latency&lt;/td>
&lt;td>1second&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Throughput&lt;/td>
&lt;td>- Well designed app: &amp;gt; 1000&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- Badly designed app: &amp;lt; 60&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="load">Load&lt;/h2>
&lt;p>Quantity of work we can perform without crushing. (It depends on application type)
E.g: WebAPI -&amp;gt; Number of concurrent requests we can handle without crashing.&lt;/p>
&lt;h3 id="load-vs-throughput">Load VS Throughput&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Type&lt;/th>
&lt;th>Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Throughput&lt;/td>
&lt;td>100 requests/sec&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Load&lt;/td>
&lt;td>500 requests without crashing&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>For e-commerce app it can be ~200 concurrent request, but system must be available on Black Fridays. So, we must be ready for ~2000 concurrent requests.&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="data-volume">Data Volume&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>How much data the system will accumulate over time&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Helps with:&lt;/p>
&lt;ul>
&lt;li>Deciding on Database type&lt;/li>
&lt;li>Designing queries&lt;/li>
&lt;li>Storage planning&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Two aspects:&lt;/p>
&lt;ul>
&lt;li>Data required on &amp;ldquo;Day One&amp;rdquo;&lt;/li>
&lt;li>Data growth over time&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="concurrent-users">Concurrent users&lt;/h2>
&lt;ul>
&lt;li>How many users will use system simultaniously&lt;/li>
&lt;/ul>
&lt;h3 id="concurrent-users-vs-load">Concurrent users VS Load&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Concurrent Users&lt;/td>
&lt;td>Including &amp;ldquo;Dead times&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Load&lt;/td>
&lt;td>Actual requests&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>For example, user requests for all products in category. Service handles request. After this for 5 minute user will be looking at this data. This duration is counted as &lt;strong>&amp;ldquo;Dead Time&amp;rdquo;&lt;/strong> and appropriate user is included in &lt;strong>concurrent users&lt;/strong>.&lt;br>
For average system, &lt;code>Concurrent = Load x 10&lt;/code>&lt;/p>
&lt;h2 id="sla-service-level-agreement">SLA (Service Level Agreement)&lt;/h2>
&lt;p>Required uptime for the system&lt;/p>
&lt;p>&lt;em>Cloud providers are mostly competing in this field. For example, SLA for Azure Cosmos DB is notes as 99.99% This means less than an hour per year:&lt;/em>&lt;/p>
&lt;pre tabindex="0">&lt;code>24 * 365 = 8760 hrs/year
8760 * 99.99% = 8759.12
________________________
8760 - 8759.12 = 0.88 hrs/year
&lt;/code>&lt;/pre>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;ul>
&lt;li>Define what the system will have to deal with
&lt;ul>
&lt;li>Performance, SLA, Load and etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Client won&amp;rsquo;t be able to define them&lt;/li>
&lt;li>Never begin working without Non-Functional requirements defined&lt;/li>
&lt;/ul></content></item><item><title>First Post</title><link>/posts/first-post/</link><pubDate>Wed, 01 Sep 2021 15:08:04 +0000</pubDate><guid>/posts/first-post/</guid><description>Hi! This is a blog I&amp;rsquo;m trying to set up :)
import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;Hello, Hugo!&amp;#34;) }</description><content>&lt;h1 id="hi">Hi!&lt;/h1>
&lt;p>This is a blog I&amp;rsquo;m trying to set up :)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello, Hugo!&amp;#34;&lt;/span>)
}
&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>About Me</title><link>/posts/about-me/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/posts/about-me/</guid><description>Who am I? I&amp;rsquo;m a geek. My name is Alvan Rahimli. Here is my GitHub. I do lots of procastination, as well as some coding.
Actually, it is a lot of coding, but I feel I can still fit much more activities in a day, but you know, there are too much distractions. So anyway, I&amp;rsquo;m a software developer, with about 2 years experience. I do a lot of C# &amp;amp; .</description><content>&lt;h1 id="who-am-i">Who am I?&lt;/h1>
&lt;ul>
&lt;li>I&amp;rsquo;m a geek. My name is Alvan Rahimli. Here is my &lt;a href="https://github.com/alvanrahimli">GitHub&lt;/a>.&lt;/li>
&lt;li>I do lots of procastination, as well as some coding.&lt;br>
Actually, it is a lot of coding, but I feel I can still fit much more activities in a day, but you know, there are too much distractions.&lt;/li>
&lt;li>So anyway, I&amp;rsquo;m a software developer, with about 2 years experience.&lt;/li>
&lt;li>I do a lot of &lt;strong>C# &amp;amp; .NET Core&lt;/strong> stuff, as well as some &lt;strong>Golang&lt;/strong> coding. I enjoy writing websites, but not only them (as I plan shifting my career to more low level stuff :D).&lt;/li>
&lt;/ul>
&lt;h1 id="what-am-i-doing">What am I doing?&lt;/h1>
&lt;p>I&amp;rsquo;m currently working as a Middle Software Developer at &lt;a href="https://staffwerke.de">Staffwerke&lt;/a>. Before this, I was gaining experience at number of places, that I have listed below:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Staffwerke&lt;/strong> ‚ÄÉ&lt;em>(10/2021 - now)&lt;/em>
&lt;ul>
&lt;li>Developing back-end services for various E-Commerce applications &amp;amp; Loyalty systems&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Frazex&lt;/strong> ‚ÄÉ ‚ÄÉ &lt;em>(06/2021 - 09/2021)&lt;/em>
&lt;ul>
&lt;li>Supporting legacy codebase for company‚Äôs projects&lt;/li>
&lt;li>Applying microservices architecture for scalable &amp;amp; available application&lt;/li>
&lt;li>Modelling systems for E-Commerce applications&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Fonibo&lt;/strong> ‚ÄÉ ‚ÄÉ &lt;em>(09/2020 - 05/2021)&lt;/em>
&lt;ul>
&lt;li>Developing services for general operation flow of fast delivery platform&lt;/li>
&lt;li>Writing algorithms to optimize courier delivery paths&lt;/li>
&lt;li>Taking part in several internal projects such as posbox.app&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>KekaMaps&lt;/strong> ‚ÄÉ‚ÄÉ&lt;em>(09/2020 - 11/2020)&lt;/em>
&lt;ul>
&lt;li>Designing and developing API infrastructure using ASP.NET Core WebApi&lt;/li>
&lt;li>Writing admin panel for operational team behind the website&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Edway&lt;/strong>‚ÄÉ‚ÄÉ‚ÄÉ‚ÄÉ&lt;em>(06/2020 - 11/2020)&lt;/em>
&lt;ul>
&lt;li>Managing &amp;amp; Operating IT Team&lt;/li>
&lt;li>Building scalable architecture using various technologies and services&lt;/li>
&lt;li>Writing services to help tutors and students to manage education paths&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="what-can-i-do">What can I do?&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Languages&lt;/th>
&lt;th>Tools &amp;amp; Frameworks&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>C#&lt;/td>
&lt;td>.NET Core, ASP.NET Core MVC, WebAPI, Razor Pages, Blazor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dart&lt;/td>
&lt;td>Flutter (I&amp;rsquo;m still learning tho)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TypeScript&lt;/td>
&lt;td>Angular&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Golang&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DevOps&lt;/td>
&lt;td>Docker &amp;amp; Docker Compose&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="some-of-my-projects">Some of my projects&lt;/h1>
&lt;ul>
&lt;li>&lt;strong>&amp;hellip;Dots&lt;/strong> ‚Äì Package Manager for dotFiles
&lt;ul>
&lt;li>&lt;a href="https://github.com/alvanrahimli/dots-cli">(go to project)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>kekamaps.com&lt;/strong> ‚Äì Website for disabled people to report any non-adopted places
&lt;ul>
&lt;li>&lt;a href="https://kekamaps.com">(go to project)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>OpenPOS&lt;/strong> ‚Äì Open Source Point of Sale &amp;amp; Inventory management application
&lt;ul>
&lt;li>&lt;a href="https://github.com/alvanrahimli/OpenPOS">(go to project)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Several proprietary software such as fonibo.com, &lt;a href="https://posbox.app">posbox.app&lt;/a> and etc.&lt;/li>
&lt;/ul>
&lt;h1 id="boring-stuff">Boring stuff&lt;/h1>
&lt;p>I am also good at:&lt;/p>
&lt;ul>
&lt;li>Team communication&lt;/li>
&lt;li>Project planning&lt;/li>
&lt;li>Software architecture design&lt;/li>
&lt;li>Time management&lt;/li>
&lt;/ul>
&lt;h1 id="interesting-facts">Interesting facts&lt;/h1>
&lt;ul>
&lt;li>I use &lt;a href="https://getfedora.org/">Fedora&lt;/a> btw.&lt;/li>
&lt;li>I &amp;lt;3 memes.&lt;/li>
&lt;li>Sometimes I write some blog posts.&lt;/li>
&lt;li>I have an amazing &lt;a href="https://github.com/themisir">friend&lt;/a> who is also a geek and writes awesome blogs at &lt;a href="https://themisir.com">themisir.com&lt;/a>&lt;/li>
&lt;/ul></content></item></channel></rss>